
//@import "./button-types/pipaluk";
@import './button-types/goey';
$regular-button-sizes: (
    xs: (
      size:.8rem
    ),
    sm: (
        size:.9rem
    ),
    md: (
        size:1rem
    ),
    lg: (
        size:1.1rem
    ),
    xl: (
        size:1.2rem
    )
  );

//  ----------------------------------------------------------------------------
//  Define the text color on a button depen ding of the background color
//  lightness.
//  ----------------------------------------------------------------------------
@mixin pyro-button-text-colors($color)
{
    @if (lightness($color) > 60)
    {
        color: #000;
    }
    @else
    {
        color: #fff;
    }
}


@mixin button-regular()
{
    min-width: 60px;

    transition: all 150ms linear;
    
    text-align: center;

    border-radius: 200px;

    .btn-group &
    {
        border-radius:0;
        &:first-child 
        {
            //border-radius: 4px 0 0 4px;
        }
        &:last-child 
        {
            //border-radius: 0 4px 4px 0;
        }
    }
    .btn-group .btn-group & 
    {
        //border-radius:0;
        // &:last-child 
        // {
        //     border-radius: 0 4px 4px 0;
        // }
    }

    .btn-group>.btn-group:not(:first-child)>&, .btn-group>&:not(:first-child) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }
   


    &:hover
    {
        background:transparent;
    }
    //  ----------------------------------------------------------------------
    //  COLORS
    //  ----------------------------------------------------------------------
    @each $colorName,
    $bkgColorValue in $pyro-colors
    {
        &.-#{$colorName}
        {
            @include pyro-button-text-colors($bkgColorValue);
            border:1px solid transparent;
            background: $bkgColorValue;

            &:hover
            {
              //  background: darken($bkgColorValue,5%);
              background:transparent;
              border-color:$bkgColorValue;
              color:$bkgColorValue;
            }
        }
    }
    //  ----------------------------------------------------------------------
    //  SIZING
    //  ----------------------------------------------------------------------
    @each $size,$map in $regular-button-sizes
    {
        $rbs: map-get($map, size);




        &.-#{$size}
        {
            font-size: $rbs;

            padding: calc(#{$rbs} / 2) calc(#{$rbs});
        }
    }
}
@mixin button-regular-reset()
{
}


@mixin pyro-buttons-sizes($padding-x,$padding-y,$label)
{
    // @if ($type=='nuka')
    // {
    //     font-size: .8rem;
    //     padding: calc(#{$value} * 1) calc(#{$value} * 4);
    // } @else if ($type=='pipaluk')
    // {
    //     font-size: .8rem;
    //     padding: calc(#{$value} * 2) calc(#{$value} * 6);
    // }@else
    // {
    //     background: black;
    // }
}




// @extend %semi-bold;

//     position: relative;

//     transition: all 100ms ease-in-out;
//     transition-delay: 150ms;

//     color: $color;
//     border: 1px solid $color;
//     background: transparent;
//     background-color: transparent;
//     &:before
//     {
//         position: absolute;
//         top: 50%;
//         left: 50%;

//         width: 20px;
//         height: 10px;
//         margin-top: -5px;
//         margin-left: -5px;

//         content: '';
//         transition: all 0ms ease-in-out;
//         transform: scale(0);

//         opacity: 1;
//         border-radius: 50%;
//         background: pc();
//     }
//     &:after
//     {
//         position: absolute;
//         top: 50%;
//         left: 50%;

//         width: 12px;
//         height: 10px;
//         margin-top: -5px;
//         margin-left: -6px;

//         content: '';
//         transition: all 0ms ease-in-out;
//         transform: scale(0);

//         opacity: 1;
//         border-radius: 50%;
//         background: pc();
//     }
//     &:hover
//     {
//         color: #fff;
//         background: pc();
//         &:after
//         {
//             transition: all 300ms ease-in-out;
//             transform: scale(4);

//             opacity: 0;
//             background: pc();
//         }
//     }
//     &:focus
//     {
//         color: #fff;
//         background: pc();
//         &:before
//         {
//             transition: all 400ms ease-in-out;
//             transform: scale(5);

//             opacity: 0;
//             background: #fff;
//         }
//     }
